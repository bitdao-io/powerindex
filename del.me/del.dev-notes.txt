# 20200923
Unclear:
  - LPMining: if math precision does not lead to overflows
  - LPMining: effects of reminders (will LPMining instance will accumulate "reminding" CVPs)
  - Checkpoints.sol::"struct Checkpoint": what is the uint96 for `votes` help with?;

Problems found:
  - reentrancy guard needed
     LPMining.sol::migrate,pendingCvp, ... so on
  - variable (non-const) `cvpPerBlock`, `function setCvpPerBlock` and `set(... _allocPoint ...)` which does not regard it, result in the invalid logic:
     LPMining.sol::pendingCvp: uint256 cvpReward = multiplier.mul(cvpPerBlock).mul(pool.allocPoint).div(totalAllocPoint)
  - inefficiencies
     LPMining.sol::checkpointVotes: condition sequence (order) in the `for` loop is not optimized (unnecessary SLOADs)
     Checkpoints.sol::"struct Checkpoint": unnecessary uint32 for `fromBlock` leads do extra SSLOADs/SSTOREs

Improvements/missing features:
  - Upgradability
  - Private functions for repeated fragments of code (calculations)

DEBUG_LOG(`(2) pre-withdraw
cvp.balanceOf(bob): ${await this.cvp.balanceOf(bob)}
pendingCvp(0, bob): ${await this.lpMining.pendingCvp(0, bob)}
cvpVestingPool: ${await this.lpMining.cvpVestingPool()}`, `${await web3.eth.getBlockNumber()}`);

DEBUG_LOG(`(1) post-deposit ${JSON.stringify(tx.receipt.logs, null, 2)}`, `${await web3.eth.getBlockNumber()}`);

DEBUG_LOG(`(12) pre-withdraw
pendingCvp(0, alice): ${await this.lpMining.pendingCvp(0, alice)}
balanceOf(alice): ${await this.cvp.balanceOf(alice)}
cvpVestingPool: ${await this.lpMining.cvpVestingPool()}`, `${await web3.eth.getBlockNumber()}`);


LPMining logical errors:
- emergencyWithdraw left CVP tokens on the contract address:
  unupdated user.amount gets transferred to the user from the contract address
    while the contract address may hold CVPs entitled to user (after updatePool) but not yet accounted in user.amount
      in other words, 'pending' CVP not accounted in the transfer amount
- checkpointVotes creates possibilities for double-counting (think of lpCvpBalance changes w/o user actions)

== New Tasks
1. Extend Checkpoint to add CVP votes delegation
    including "move delegation" on CVP token transfer to a new owner
2. Upgradable VestedLPMining - Postpone until confirmation
	OZ version of the Proxy and ProxyAdmin

Required: estimate time and confirm with N.
